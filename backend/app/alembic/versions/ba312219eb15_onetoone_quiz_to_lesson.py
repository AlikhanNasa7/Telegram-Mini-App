"""onetoone quiz to lesson

Revision ID: ba312219eb15
Revises: 
Create Date: 2024-10-19 18:52:22.014273

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ba312219eb15'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('tokens_balance', sa.Integer(), nullable=True),
    sa.Column('experience_points', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('courses',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_index(op.f('ix_courses_course_id'), 'courses', ['course_id'], unique=False)
    op.create_table('course_enrollments',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('enrollment_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'course_id')
    )
    op.create_table('modules',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
    sa.PrimaryKeyConstraint('module_id')
    )
    op.create_index(op.f('ix_modules_module_id'), 'modules', ['module_id'], unique=False)
    op.create_table('lessons',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('audio_file_path', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ),
    sa.PrimaryKeyConstraint('lesson_id')
    )
    op.create_index(op.f('ix_lessons_lesson_id'), 'lessons', ['lesson_id'], unique=False)
    op.create_table('quizzes',
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.lesson_id'], ),
    sa.PrimaryKeyConstraint('quiz_id')
    )
    op.create_index(op.f('ix_quizzes_quiz_id'), 'quizzes', ['quiz_id'], unique=False)
    op.create_table('questions',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.Enum('multiple_choice', 'true_false', name='question_types'), nullable=False),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('correct_answer', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.quiz_id'], ),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_index(op.f('ix_questions_question_id'), 'questions', ['question_id'], unique=False)
    op.create_table('user_progress',
    sa.Column('progress_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('not_started', 'in_progress', 'completed', name='progress_status'), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.lesson_id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.quiz_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('progress_id')
    )
    op.create_index(op.f('ix_user_progress_progress_id'), 'user_progress', ['progress_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_progress_progress_id'), table_name='user_progress')
    op.drop_table('user_progress')
    op.drop_index(op.f('ix_questions_question_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_quizzes_quiz_id'), table_name='quizzes')
    op.drop_table('quizzes')
    op.drop_index(op.f('ix_lessons_lesson_id'), table_name='lessons')
    op.drop_table('lessons')
    op.drop_index(op.f('ix_modules_module_id'), table_name='modules')
    op.drop_table('modules')
    op.drop_table('course_enrollments')
    op.drop_index(op.f('ix_courses_course_id'), table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
